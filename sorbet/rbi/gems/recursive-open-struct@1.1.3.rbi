# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `recursive-open-struct` gem.
# Please instead update this file by running `bin/tapioca gem recursive-open-struct`.

class RecursiveOpenStruct < ::OpenStruct
  include ::RecursiveOpenStruct::Dig
  include ::RecursiveOpenStruct::DebugInspect

  def initialize(hash = T.unsafe(nil), passed_options = T.unsafe(nil)); end

  def [](name); end
  def []=(name, value); end
  def delete_field(name); end
  def method_missing(mid, *args); end
  def new_ostruct_member(name); end
  def to_h; end
  def to_hash; end

  private

  def _create_sub_element_(hash, **overrides); end
  def _get_key_from_table_(name); end
  def initialize_dup(orig); end
  def new_ostruct_member!(name); end
  def recurse_over_array(array); end
  def respond_to_missing?(mid, include_private = T.unsafe(nil)); end

  class << self
    def default_options; end
  end
end

module RecursiveOpenStruct::DebugInspect
  def debug_inspect(io = T.unsafe(nil), indent_level = T.unsafe(nil), recursion_limit = T.unsafe(nil)); end
  def display_recursive_open_struct(io, ostrct_or_hash, indent_level, recursion_limit); end
end

class RecursiveOpenStruct::DeepDup
  def initialize(opts = T.unsafe(nil)); end

  def call(obj); end

  private

  def deep_dup(obj, visited = T.unsafe(nil)); end
  def value_or_deep_dup(value, visited); end
end

module RecursiveOpenStruct::Dig
  def dig(name, *names); end
end

RecursiveOpenStruct::VERSION = T.let(T.unsafe(nil), String)
